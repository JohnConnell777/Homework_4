#include <iostream>
#include <vector>
using std::cout;
using std::endl;
using std::vector;
vector<int> merge_sort(const vector<int> a){
	if (a.size() == 1)
		return a;
	int half_size = a.size() / 2;
	vector<int> firstHalf(a.begin(), a.begin() + half_size);
	vector<int> secondHalf(a.begin() + half_size, a.end());
	
	//seperating everything into its individual arrays
	if (firstHalf.size() > 1){
		firstHalf = merge_sort(firstHalf);
  }
	if (secondHalf.size() > 1){
		secondHalf = merge_sort(secondHalf);
	}
	//going back and combining the elements
	vector<int> temp;
	do{
			if (firstHalf[0] < secondHalf[0]){
				temp.push_back(firstHalf[0]);
				firstHalf.erase(firstHalf.begin());
			}
			else{
				temp.push_back(secondHalf[0]);
				secondHalf.erase(secondHalf.begin());
			}
	}while (!firstHalf.empty() && !secondHalf.empty());
	
	while (!firstHalf.empty()){
		for (int i = 0; i < firstHalf.size(); i++)
		{
			temp.push_back(firstHalf[i]);
			firstHalf.erase(firstHalf.begin() + i);
		}
	}
	while (!secondHalf.empty()){
		for (int i = 0; i < secondHalf.size(); i++)
		{
			temp.push_back(secondHalf[i]);
			secondHalf.erase(secondHalf.begin() + i);
		}
	}
	return temp;
}
